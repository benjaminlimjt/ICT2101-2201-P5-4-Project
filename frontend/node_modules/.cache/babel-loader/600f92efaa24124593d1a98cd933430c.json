{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ngjun\\\\OneDrive\\\\Desktop\\\\2102Proj\\\\ICT2101-2201-P5-4-Project\\\\frontend\\\\src\\\\components\\\\Game\\\\Game.js\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass Game extends React.Component {\n  constructor(props) {\n    super(props);\n    this.tablerecords = [];\n    this.state = {\n      visible: false,\n      selectedRowKeys: [] // Check here to configure the default column\n\n    };\n\n    this.hide = () => {\n      this.setState({\n        visible: false\n      });\n    };\n\n    this.handleVisibleChange = visible => {\n      this.setState({\n        visible\n      });\n    };\n\n    this.onSelectChange = selectedRowKeys => {\n      console.log('selectedRowKeys changed: ', selectedRowKeys);\n      this.setState({\n        selectedRowKeys\n      });\n    };\n\n    this.updateJSONdata = async () => {\n      //get all the data\n      // const dataSource = [...this.state.dataSource];\n      var temp = []; //pass selected key\n\n      if (typeof this.state.selectedRowKeys !== \"undefined\") {\n        const selectedKey = [...this.state.selectedRowKeys];\n        console.log(\"selectedPackagesArr: \", selectedKey);\n        var temp = this.state.dataSource.filter(item => selectedKey.includes(item.key)); // storing gift type+ count \n\n        var _ = require('underscore');\n\n        var countArr = _.countBy(temp, function (temp) {\n          return temp.gifttype;\n        });\n\n        countArr.selectedKeys = selectedKey;\n        console.log(\"countArr\", countArr);\n        removeWelfareRequest(countArr);\n      } else {\n        // if no items selected\n        return \"Please select items to approve.\";\n      }\n    };\n\n    this.getSelectedPackages = key => {\n      const dataSource = [...this.state.dataSource];\n      var temp = []; //if items are selected \n\n      if (typeof this.state.selectedRowKeys !== 'undefined') {\n        temp = dataSource.filter(item => this.state.selectedRowKeys.includes(item.key)); // console.log(\"selectedPackagesArr: \",temp);\n\n        var giftText = \"\"; // for(var i = 0; i < temp.length ; i++){\n        //   giftText = giftText + \"Gift type no: \"+ i + \" , \"+ temp[i].gifttype + '\\n';\n        // }\n\n        var _ = require('underscore');\n\n        var countArr = _.countBy(temp, function (temp) {\n          return temp.gifttype;\n        });\n\n        for (var giftname in countArr) {\n          giftText = giftText + countArr[giftname] + \" x \" + giftname + \"\\n\";\n        }\n\n        if (giftText == \"\") return \"Please select items to approve.\";\n        return giftText;\n      } else {\n        // if no items selected\n        return \"Please select items to approve.\";\n      }\n    };\n\n    this.handleDelete = () => {\n      // console.log(\"handle delete\");\n      const dataSource = [...this.state.dataSource]; // console.log(\"datasource:\", dataSource);\n      // console.log(\"selectedRows\", this.state.selectedRowKeys);\n      //error check ensure selectedkeys initialized\n\n      if (typeof this.state.selectedRowKeys !== 'undefined') {\n        const selectedKey = [...this.state.selectedRowKeys];\n        var temp = this.state.dataSource.filter(item => selectedKey.includes(item.key)); // storing gift type+ count \n\n        var _ = require('underscore');\n\n        var countArr = _.countBy(temp, function (temp) {\n          return temp.gifttype;\n        }); //  ensure sufficient in stock.\n\n\n        const inventory = inventoryData;\n\n        for (var giftname in countArr) {\n          //iterate through inventoryJSON objs\n          for (var item in inventory) {\n            // console.log(\"gift type \"+key+ \" count: \"+req.body[key])\n            if (inventory[item].name == giftname) {\n              var updatedCount = inventory[item].instock - countArr[giftname];\n\n              if (updatedCount < 0) {\n                alert(\"Ensure sufficient stock for : \" + giftname); //end flow if error, should work on ui\n\n                return;\n              }\n            }\n          }\n        } // - error check end\n\n\n        this.setState({\n          dataSource: dataSource.filter(item => !this.state.selectedRowKeys.includes(item.key))\n        }); //update backend json file\n\n        this.updateJSONdata();\n      }\n\n      this.hide();\n    };\n\n    this.columns = [{\n      title: \"Sender\",\n      dataIndex: \"sender\"\n    }, {\n      title: \"Receiver\",\n      dataIndex: \"receiver\"\n    }, {\n      title: \"Welfare Pack Type\",\n      dataIndex: \"gifttype\"\n    }];\n    this.state = {\n      dataSource: approvalData\n    };\n  }\n\n  render() {\n    const {\n      selectedRowKeys\n    } = this.state;\n    const {\n      dataSource\n    } = this.state;\n    const columns = this.columns.map(col => {\n      if (!col.editable) {\n        return col;\n      }\n\n      return { ...col,\n        onCell: record => ({\n          record,\n          editable: col.editable,\n          dataIndex: col.dataIndex,\n          title: col.title,\n          handleSave: this.handleSave\n        })\n      };\n    });\n    const rowSelection = {\n      selectedRowKeys,\n      onChange: this.onSelectChange,\n      selections: [Table.SELECTION_ALL, // Table.SELECTION_INVERT,\n      Table.SELECTION_NONE, {\n        key: 'odd',\n        text: 'Select Odd Row',\n        onSelect: changableRowKeys => {\n          let newSelectedRowKeys = [];\n          newSelectedRowKeys = changableRowKeys.filter((key, index) => {\n            console.log(index);\n\n            if (index % 2 !== 0) {\n              return false;\n            }\n\n            return true;\n          });\n          this.setState({\n            selectedRowKeys: newSelectedRowKeys\n          });\n        }\n      }, {\n        key: 'even',\n        text: 'Select Even Row',\n        onSelect: changableRowKeys => {\n          let newSelectedRowKeys = [];\n          newSelectedRowKeys = changableRowKeys.filter((key, index) => {\n            console.log(index);\n\n            if (index % 2 !== 0) {\n              return true;\n            }\n\n            return false;\n          });\n          this.setState({\n            selectedRowKeys: newSelectedRowKeys\n          });\n        }\n      }]\n    };\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"m-auto w-11/12\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"text-2xl font-bold my-6\",\n        children: [\"Welfare Approval\", /*#__PURE__*/_jsxDEV(\"div\", {\n          \"data-tip\": \"Manage all welfare pack requests\",\n          class: \"inline\",\n          children: /*#__PURE__*/_jsxDEV(InfoCircleTwoTone, {\n            style: {\n              fontSize: '18px'\n            },\n            twoToneColor: \"#A3A989\",\n            class: \"inline-block\",\n            className: \"px-4\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ReactTooltip, {\n          place: \"right\",\n          effect: \"solid\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Table, {\n        rowSelection: rowSelection,\n        columns: columns,\n        dataSource: dataSource\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Popover, {\n        overlayInnerStyle: {\n          textAlign: \"center\",\n          whiteSpace: \"pre-line\",\n          width: '60vw',\n          height: '20vw'\n        },\n        content: /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            class: \"font-bold text-center text-blue-800\",\n            children: \"Selected Gifts to approve\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: this.getSelectedPackages()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 212,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"primary\",\n            onClick: () => this.hide(),\n            style: {\n              position: \"absolute\",\n              bottom: \"3vw\",\n              left: \"15vw\"\n            },\n            children: \"Back\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 213,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"primary\",\n            onClick: () => this.handleDelete(),\n            style: {\n              position: \"absolute\",\n              bottom: \"3vw\",\n              right: \"15vw\"\n            },\n            children: \"Approve\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 214,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true),\n        title: /*#__PURE__*/_jsxDEV(\"b\", {\n          children: \"Confirm Approval\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 18\n        }, this),\n        trigger: \"click\",\n        visible: this.state.visible,\n        onVisibleChange: this.handleVisibleChange,\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          style: {\n            margin: \"0 30vw\"\n          },\n          type: \"primary\",\n          onClick: () => this.getSelectedPackages(),\n          children: \"Approve\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default Game;","map":{"version":3,"sources":["C:/Users/ngjun/OneDrive/Desktop/2102Proj/ICT2101-2201-P5-4-Project/frontend/src/components/Game/Game.js"],"names":["React","Game","Component","constructor","props","tablerecords","state","visible","selectedRowKeys","hide","setState","handleVisibleChange","onSelectChange","console","log","updateJSONdata","temp","selectedKey","dataSource","filter","item","includes","key","_","require","countArr","countBy","gifttype","selectedKeys","removeWelfareRequest","getSelectedPackages","giftText","giftname","handleDelete","inventory","inventoryData","name","updatedCount","instock","alert","columns","title","dataIndex","approvalData","render","map","col","editable","onCell","record","handleSave","rowSelection","onChange","selections","Table","SELECTION_ALL","SELECTION_NONE","text","onSelect","changableRowKeys","newSelectedRowKeys","index","fontSize","textAlign","whiteSpace","width","height","position","bottom","left","right","margin"],"mappings":"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","sourcesContent":["import React from \"react\";\r\n\r\nclass Game extends React.Component {\r\n  tablerecords = [];\r\n  state = {\r\n    visible: false,\r\n    selectedRowKeys: [], // Check here to configure the default column\r\n  };\r\n  hide = () => {\r\n    this.setState({\r\n      visible: false,\r\n    });\r\n  };\r\n  handleVisibleChange = visible => {\r\n    this.setState({ visible });\r\n  };\r\n\r\n  onSelectChange = selectedRowKeys => {\r\n    console.log('selectedRowKeys changed: ', selectedRowKeys);\r\n    this.setState({ selectedRowKeys });\r\n  };\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.columns = [\r\n      {\r\n        title: \"Sender\",\r\n        dataIndex: \"sender\",\r\n      },\r\n      {\r\n        title: \"Receiver\",\r\n        dataIndex: \"receiver\",\r\n      },\r\n      {\r\n        title: \"Welfare Pack Type\",\r\n        dataIndex: \"gifttype\",\r\n      },\r\n    ];\r\n    this.state = {\r\n      dataSource: approvalData\r\n    };\r\n  }\r\n  updateJSONdata = async () => {\r\n    //get all the data\r\n    // const dataSource = [...this.state.dataSource];\r\n    var temp = [];\r\n    //pass selected key\r\n    if (typeof this.state.selectedRowKeys !== \"undefined\") {\r\n      const selectedKey = [...this.state.selectedRowKeys];\r\n      console.log(\"selectedPackagesArr: \", selectedKey);\r\n      var temp = this.state.dataSource.filter((item) => selectedKey.includes(item.key));\r\n      // storing gift type+ count \r\n      var _ = require('underscore')\r\n      var countArr = _.countBy(temp, function (temp) { return temp.gifttype });\r\n      countArr.selectedKeys = selectedKey;\r\n      console.log(\"countArr\", countArr);\r\n      removeWelfareRequest(countArr);\r\n    } else {\r\n      // if no items selected\r\n      return \"Please select items to approve.\";\r\n    }\r\n  };\r\n  getSelectedPackages = (key) => {\r\n    const dataSource = [...this.state.dataSource];\r\n    var temp = [];\r\n\r\n    //if items are selected \r\n    if (typeof this.state.selectedRowKeys !== 'undefined') {\r\n      temp = dataSource.filter(item => this.state.selectedRowKeys.includes(item.key));\r\n      // console.log(\"selectedPackagesArr: \",temp);\r\n      var giftText = \"\"\r\n\r\n      // for(var i = 0; i < temp.length ; i++){\r\n      //   giftText = giftText + \"Gift type no: \"+ i + \" , \"+ temp[i].gifttype + '\\n';\r\n      // }\r\n      var _ = require('underscore')\r\n      var countArr = _.countBy(temp, function (temp) { return temp.gifttype });\r\n\r\n      for (var giftname in countArr) {\r\n        giftText = giftText + countArr[giftname] + \" x \" + giftname + \"\\n\";\r\n      }\r\n\r\n      if (giftText == \"\") return \"Please select items to approve.\"\r\n      return giftText;\r\n    }\r\n    else {\r\n      // if no items selected\r\n      return \"Please select items to approve.\"\r\n    }\r\n  }\r\n  handleDelete = () => {\r\n    // console.log(\"handle delete\");\r\n    const dataSource = [...this.state.dataSource];\r\n    // console.log(\"datasource:\", dataSource);\r\n    // console.log(\"selectedRows\", this.state.selectedRowKeys);\r\n    //error check ensure selectedkeys initialized\r\n\r\n    if (typeof this.state.selectedRowKeys !== 'undefined') {\r\n\r\n      const selectedKey = [...this.state.selectedRowKeys];\r\n      var temp = this.state.dataSource.filter((item) => selectedKey.includes(item.key));\r\n      // storing gift type+ count \r\n      var _ = require('underscore')\r\n      var countArr = _.countBy(temp, function (temp) { return temp.gifttype });\r\n\r\n      //  ensure sufficient in stock.\r\n      const inventory = inventoryData;\r\n      for (var giftname in countArr) {\r\n        //iterate through inventoryJSON objs\r\n        for (var item in inventory) {\r\n          // console.log(\"gift type \"+key+ \" count: \"+req.body[key])\r\n          if (inventory[item].name == giftname) {\r\n\r\n            var updatedCount = inventory[item].instock - countArr[giftname];\r\n            if (updatedCount < 0) {\r\n              alert(\"Ensure sufficient stock for : \" + giftname);\r\n              //end flow if error, should work on ui\r\n              return;\r\n            }\r\n          }\r\n        }\r\n\r\n      }\r\n      // - error check end\r\n      this.setState({\r\n        dataSource: dataSource.filter(item =>\r\n          !this.state.selectedRowKeys.includes(item.key)\r\n        ),\r\n      });\r\n      //update backend json file\r\n      this.updateJSONdata();\r\n    }\r\n    this.hide()\r\n  };\r\n\r\n\r\n  render() {\r\n    const { selectedRowKeys } = this.state;\r\n    const { dataSource } = this.state;\r\n    const columns = this.columns.map((col) => {\r\n      if (!col.editable) {\r\n        return col;\r\n      }\r\n\r\n      return {\r\n        ...col,\r\n        onCell: (record) => ({\r\n          record,\r\n          editable: col.editable,\r\n          dataIndex: col.dataIndex,\r\n          title: col.title,\r\n          handleSave: this.handleSave,\r\n        }),\r\n      };\r\n    });\r\n    const rowSelection = {\r\n      selectedRowKeys,\r\n      onChange: this.onSelectChange,\r\n      selections: [\r\n        Table.SELECTION_ALL,\r\n        // Table.SELECTION_INVERT,\r\n        Table.SELECTION_NONE,\r\n        {\r\n          key: 'odd',\r\n          text: 'Select Odd Row',\r\n          onSelect: changableRowKeys => {\r\n            let newSelectedRowKeys = [];\r\n            newSelectedRowKeys = changableRowKeys.filter((key, index) => {\r\n              console.log(index);\r\n              if (index % 2 !== 0) {\r\n                return false;\r\n              }\r\n              return true;\r\n            });\r\n            this.setState({ selectedRowKeys: newSelectedRowKeys });\r\n          },\r\n        },\r\n        {\r\n          key: 'even',\r\n          text: 'Select Even Row',\r\n          onSelect: changableRowKeys => {\r\n            let newSelectedRowKeys = [];\r\n            newSelectedRowKeys = changableRowKeys.filter((key, index) => {\r\n              console.log(index);\r\n              if (index % 2 !== 0) {\r\n                return true;\r\n              }\r\n              return false;\r\n            });\r\n            this.setState({ selectedRowKeys: newSelectedRowKeys });\r\n          },\r\n        },\r\n      ],\r\n    };\r\n\r\n\r\n    return (\r\n      <div class=\"m-auto w-11/12\">\r\n        <div class=\"text-2xl font-bold my-6\">\r\n          Welfare Approval\r\n          <div data-tip=\"Manage all welfare pack requests\" class=\"inline\">\r\n            <InfoCircleTwoTone style={{ fontSize: '18px' }} twoToneColor=\"#A3A989\" class=\"inline-block\" className={\"px-4\"} />\r\n          </div>\r\n          <ReactTooltip place=\"right\" effect=\"solid\" />\r\n        </div>\r\n        <Table rowSelection={rowSelection} columns={columns} dataSource={dataSource} />\r\n        <Popover\r\n          overlayInnerStyle={{ textAlign: \"center\", whiteSpace: \"pre-line\", width: '60vw', height: '20vw' }}\r\n          content={\r\n            <>\r\n              <p class=\"font-bold text-center text-blue-800\">Selected Gifts to approve</p>\r\n              <p>{this.getSelectedPackages()}</p>\r\n              <Button type=\"primary\" onClick={() => this.hide()} style={{ position: \"absolute\", bottom: \"3vw\", left: \"15vw\" }}>Back</Button>\r\n              <Button type=\"primary\" onClick={() => this.handleDelete()} style={{ position: \"absolute\", bottom: \"3vw\", right: \"15vw\" }}>Approve</Button>\r\n              {/* <a onClick={this.handleDelete}>Approve</a> */}\r\n            </>\r\n          }\r\n          title={<b>Confirm Approval</b>}\r\n          trigger=\"click\"\r\n          visible={this.state.visible}\r\n          onVisibleChange={this.handleVisibleChange}\r\n        >\r\n          <Button\r\n            style={{ margin: \"0 30vw\" }}\r\n            type=\"primary\"\r\n            onClick={() => this.getSelectedPackages()}\r\n          >\r\n            Approve\r\n          </Button>\r\n        </Popover>\r\n        {/* </Popconfirm> */}\r\n      </div>\r\n\r\n    );\r\n  }\r\n\r\n}\r\n\r\n\r\nexport default Game;"]},"metadata":{},"sourceType":"module"}